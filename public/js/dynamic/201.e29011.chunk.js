"use strict";(self.webpackChunk_roots_bud_sage_sage=self.webpackChunk_roots_bud_sage_sage||[]).push([[201],{"./scripts/calculator.js":(a,t,e)=>{e.r(t),jQuery(document).ready((function(a){console.log("Calculator initialized");class t{constructor(){this.models={atlas:{blindsOffset:.045,blindsSpacing:.1,minWidth:.3,maxWidth:3.3},gamma:{blindsOffset:.05,blindsSpacing:.16,minWidth:.3,maxWidth:3.3},sigma:{blindsOffset:.06,blindsSpacing:.08,minWidth:.3,maxWidth:3.3},piramida:{blindsOffset:.06,blindsSpacing:.065,minWidth:.3,maxWidth:3.3}},this.init()}init(){a(".calculator-tab").length&&(this.setupEventListeners(),this.setupToggleButtons(),this.setDefaultValues())}setupEventListeners(){a(".tab-button").on("click",(t=>{const e=a(t.target).data("model");this.switchTab(e)})),Object.keys(this.models).forEach((t=>{a(`#${t}-panel-width, #${t}-panel-height, #${t}-number-of-panels`).on("input change",(()=>{this.calculateModel(t)})),a(`#${t}-panel-width`).on("input",(a=>{this.validateWidth(a,t)}))})),a("#terra-panel-width, #terra-panel-height, #terra-panel-distance-cassettes, #terra-panel-base-distance, #terra-number-of-panels").on("input change",(()=>this.calculateTerra()))}setupToggleButtons(){a(".required-materials--toggle-link").on("click",(function(t){t.preventDefault();const e=a(this).closest(".mt-8").find('[id$="calculator-results"]'),l=a(this).find(".toggle-icon");e.slideToggle(300,(function(){l.text(a(this).is(":visible")?"-":"+")}))}))}switchTab(t){console.log("Switching to model:",t),a(".tab-button").removeClass("active bg-main text-white").addClass("bg-white text-second"),a(`.tab-button[data-model="${t}"]`).removeClass("bg-white text-second").addClass("active bg-main text-white"),a(".calculator-tab").hide().removeClass("active"),a(`#${t}-calculator`).show().addClass("active"),this.calculateModel(t)}calculateModel(a){switch(console.log("Calculating model:",a),a){case"atlas":this.calculateAtlas();break;case"gamma":this.calculateGamma();break;case"sigma":this.calculateSigma();break;case"piramida":this.calculatePiramida();break;case"terra":this.calculateTerra()}}calculateAtlas(){const t=parseFloat(a("#atlas-panel-width").val())||0,e=parseFloat(a("#atlas-panel-height").val())||0,l=parseInt(a("#atlas-number-of-panels").val())||0;if(!t||!e||!l)return;const s=Math.max((e-.045)/.1*l,0),i=Math.max((t-.01)*s,0);let n=0;t>1.29&&t<2.1?n=1:t>2.09&&(n=2);const c=n,o=e*n*l,p=this.calculateRivets(s,l,n);a("#atlas-results").html(`\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b \u0416\u0430\u043b\u044e\u0437\u0438: ${s.toFixed(2)} Pcs, ${i.toFixed(2)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u043e\u0442\u043b\u044f\u0432\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u0442\u043e\u0434\u044f\u0441\u043d\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u0425\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0435\u043d \u043f\u0440\u043e\u0444\u0438\u043b U: ${l} Pcs, ${(t*l).toFixed(2)} lm</p>\n                <p>\u0423\u043a\u0440\u0435\u043f\u0432\u0430\u0449 \u043f\u0440\u043e\u0444\u0438\u043b: ${c} Pcs, ${o.toFixed(3)} lm</p>\n                <p>\u0417\u0430\u043a\u043b\u0435\u043f\u043a\u0438: ${p} Pcs</p>\n                <p>\u0421\u0430\u043c\u043e\u043d\u0430\u0440\u0435\u0437\u043d\u0438 \u0432\u0438\u043d\u0442\u043e\u0432\u0435: ${10*l} Pcs</p>\n                <p>\u0422\u0430\u043f\u0438: ${10*l+n*l} Pcs</p>\n                <p>\u042a\u0433\u044a\u043b: ${n*l} Pcs</p>\n            `),a("#atlas-calculator-results").removeClass("hidden")}calculateGamma(){const t=parseFloat(a("#gamma-panel-width").val())||0,e=parseFloat(a("#gamma-panel-height").val())||0,l=parseInt(a("#gamma-number-of-panels").val())||0;if(!t||!e||!l)return;const s=Math.max((e-.05)/.16*l,0),i=Math.max((t-.01)*s,0);let n=0;t>1.29&&t<2.1?n=1:t>2.09&&(n=2);const c=n,o=e*n*l,p=this.calculateRivets(s,l,n);a("#gamma-results").html(`\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b \u0416\u0430\u043b\u044e\u0437\u0438: ${s.toFixed(2)} Pcs, ${i.toFixed(2)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u043e\u0442\u043b\u044f\u0432\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u0442\u043e\u0434\u044f\u0441\u043d\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u0425\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0435\u043d \u043f\u0440\u043e\u0444\u0438\u043b U: ${l} Pcs, ${(t*l).toFixed(2)} lm</p>\n                <p>\u0423\u043a\u0440\u0435\u043f\u0432\u0430\u0449 \u043f\u0440\u043e\u0444\u0438\u043b: ${c} Pcs, ${o.toFixed(3)} lm</p>\n                <p>\u0417\u0430\u043a\u043b\u0435\u043f\u043a\u0438: ${p} Pcs</p>\n                <p>\u0421\u0430\u043c\u043e\u043d\u0430\u0440\u0435\u0437\u043d\u0438 \u0432\u0438\u043d\u0442\u043e\u0432\u0435: ${10*l} Pcs</p>\n                <p>\u0422\u0430\u043f\u0438: ${10*l+n*l} Pcs</p>\n                <p>\u042a\u0433\u044a\u043b: ${n*l} Pcs</p>\n            `),a("#gamma-calculator-results").removeClass("hidden")}calculateSigma(){const t=parseFloat(a("#sigma-panel-width").val())||0,e=parseFloat(a("#sigma-panel-height").val())||0,l=parseInt(a("#sigma-number-of-panels").val())||0;if(!t||!e||!l)return;const s=Math.max((e-.06)/.08*l,0),i=Math.max((t-.01)*s,0);let n=0;t>1.29&&t<2.1?n=1:t>2.09&&(n=2);const c=n,o=e*n*l,p=this.calculateRivets(s,l,n);a("#sigma-results").html(`\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b \u0416\u0430\u043b\u044e\u0437\u0438: ${s.toFixed(2)} Pcs, ${i.toFixed(2)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u043e\u0442\u043b\u044f\u0432\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u0442\u043e\u0434\u044f\u0441\u043d\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u0425\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0435\u043d \u043f\u0440\u043e\u0444\u0438\u043b U: ${l} Pcs, ${(t*l).toFixed(2)} lm</p>\n                <p>\u0423\u043a\u0440\u0435\u043f\u0432\u0430\u0449 \u043f\u0440\u043e\u0444\u0438\u043b: ${c} Pcs, ${o.toFixed(3)} lm</p>\n                <p>\u0417\u0430\u043a\u043b\u0435\u043f\u043a\u0438: ${p} Pcs</p>\n                <p>\u0421\u0430\u043c\u043e\u043d\u0430\u0440\u0435\u0437\u043d\u0438 \u0432\u0438\u043d\u0442\u043e\u0432\u0435: ${10*l} Pcs</p>\n                <p>\u0422\u0430\u043f\u0438: ${10*l+n*l} Pcs</p>\n                <p>\u042a\u0433\u044a\u043b: ${n*l} Pcs</p>\n            `),a("#sigma-calculator-results").removeClass("hidden")}calculatePiramida(){const t=parseFloat(a("#piramida-panel-width").val())||0,e=parseFloat(a("#piramida-panel-height").val())||0,l=parseInt(a("#piramida-number-of-panels").val())||0;if(!t||!e||!l)return;const s=Math.max((e-.06)/.065*l,0),i=Math.max((t-.01)*s,0);let n=0;t>1.29&&t<2.1?n=1:t>2.09&&(n=2);const c=100*Math.ceil(4*(s+1)/l/100)*l;a("#piramida-results").html(`\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b \u0416\u0430\u043b\u044e\u0437\u0438: ${s.toFixed(2)} Pcs, ${i.toFixed(2)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u043e\u0442\u043b\u044f\u0432\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u041f\u0440\u043e\u0444\u0438\u043b U \u0442\u043e\u0434\u044f\u0441\u043d\u043e: ${l} Pcs, ${(e*l).toFixed(3)} lm</p>\n                <p>\u0425\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0435\u043d \u043f\u0440\u043e\u0444\u0438\u043b U: ${l} Pcs, ${(t*l).toFixed(2)} lm</p>\n                <p>\u0417\u0430\u043a\u043b\u0435\u043f\u043a\u0438: ${c} Pcs</p>\n                <p>\u0421\u0430\u043c\u043e\u043d\u0430\u0440\u0435\u0437\u043d\u0438 \u0432\u0438\u043d\u0442\u043e\u0432\u0435: ${10*l} Pcs</p>\n                <p>\u0422\u0430\u043f\u0438: ${10*l} Pcs</p>\n            `),a("#piramida-calculator-results").removeClass("hidden")}calculateTerra(){const t=parseFloat(a("#terra-panel-width").val())||0,e=parseFloat(a("#terra-panel-height").val())||0,l=parseFloat(a("#terra-panel-distance-cassettes").val())||0,s=parseFloat(a("#terra-panel-base-distance").val())||0,i=parseInt(a("#terra-number-of-panels").val())||0;if(!(t&&e&&l&&s&&i))return;const n=Math.floor((e-s/100)/(.108+l/100)),c=Math.ceil((e-s/100)/(.108+l/100)),o=.108*n+l/100*(n-1)+s/100,p=.108*c+l/100*(c-1)+s/100,r=Math.abs(e-o),d=Math.abs(e-p),h=r<=d?o:p;a("#terra-panel-optimal-height").val(h.toFixed(3));const m=(r<=d?n:c)*i,u=Math.max((t-.01)*m,0),$=Math.round(8*m)>=101?200*i:100*i;a("#terra-results").html(`\n                <p>Profile Cassettes: ${m} Pcs, ${u.toFixed(2)} lm</p>\n                <p>U Profile: ${2*i} Pcs, ${(h*i*2).toFixed(3)} lm</p>\n                <p>\u0417\u0430\u043a\u043b\u0435\u043f\u043a\u0438: ${$} Pcs</p>\n                <p>\u0421\u0430\u043c\u043e\u043d\u0430\u0440\u0435\u0437\u043d\u0438 \u0432\u0438\u043d\u0442\u043e\u0432\u0435: ${10*i} Pcs</p>\n                <p>\u0422\u0430\u043f\u0438: ${10*i} Pcs</p>\n            `),a("#terra-calculator-results").removeClass("hidden")}calculateRivets(a,t,e){let l=0;return 0===e?l=4*(a/t+1)*t:1===e?l=5*(a/t+1)*t:2===e&&(l=6*(a/t+1)*t),100*Math.ceil((l+2*e)/t/100)*t}validateWidth(t,e){const l=parseFloat(a(t.target).val()),{minWidth:s,maxWidth:i}=this.models[e];l<s&&a(t.target).val(s)}setDefaultValues(){console.log("Setting default values"),Object.keys(this.models).forEach((t=>{a(`#${t}-panel-width`).val(1.8),a(`#${t}-panel-height`).find("option:first").prop("selected",!0),a(`#${t}-number-of-panels`).val(1),this.calculateModel(t)})),a("#terra-panel-width").val(1.8),a("#terra-panel-height").val(2),a("#terra-panel-distance-cassettes").val(10),a("#terra-panel-base-distance").val(10),a("#terra-number-of-panels").val(1),this.calculateTerra()}}a(".calculator-tab").length?(console.log("Initializing calculator"),new t):console.log("No calculator tabs found")}))}}]);